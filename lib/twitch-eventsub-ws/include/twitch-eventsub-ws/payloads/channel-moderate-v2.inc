// WARNING: This file is automatically generated. Any changes will be lost.
#include "twitch-eventsub-ws/json.hpp"
namespace chatterino::eventsub::lib::payload::channel_moderate::v2 {

void tag_invoke(json::FromJsonTag<Followers>, Followers &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<FollowersOff>, FollowersOff &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Slow>, Slow &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SlowOff>, SlowOff &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Vip>, Vip &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Unvip>, Unvip &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Mod>, Mod &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Unmod>, Unmod &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Ban>, Ban &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SharedChatBan>, SharedChatBan &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Unban>, Unban &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SharedChatUnban>, SharedChatUnban &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Timeout>, Timeout &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SharedChatTimeout>, SharedChatTimeout &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Untimeout>, Untimeout &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SharedChatUntimeout>,
                SharedChatUntimeout &target, boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Raid>, Raid &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Unraid>, Unraid &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Delete>, Delete &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SharedChatDelete>, SharedChatDelete &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<AutomodTerms>, AutomodTerms &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<AddBlockedTerm>, AddBlockedTerm &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<AddPermittedTerm>, AddPermittedTerm &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<RemoveBlockedTerm>, RemoveBlockedTerm &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<RemovePermittedTerm>,
                RemovePermittedTerm &target, boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<UnbanRequest>, UnbanRequest &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<ApproveUnbanRequest>,
                ApproveUnbanRequest &target, boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<DenyUnbanRequest>, DenyUnbanRequest &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Warn>, Warn &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Clear>, Clear &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<EmoteOnly>, EmoteOnly &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<EmoteOnlyOff>, EmoteOnlyOff &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Uniquechat>, Uniquechat &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<UniquechatOff>, UniquechatOff &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Subscribers>, Subscribers &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<SubscribersOff>, SubscribersOff &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Event>, Event &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

void tag_invoke(json::FromJsonTag<Payload>, Payload &target,
                boost::system::error_code &ec,
                const boost::json::value &jvRoot);

}  // namespace chatterino::eventsub::lib::payload::channel_moderate::v2
