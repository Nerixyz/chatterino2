// WARNING: This file is automatically generated. Any changes will be lost.
#include "twitch-eventsub-ws/chrono.hpp"  // IWYU pragma: keep
#include "twitch-eventsub-ws/detail/errors.hpp"
#include "twitch-eventsub-ws/detail/variant.hpp"  // IWYU pragma: keep
#include "twitch-eventsub-ws/json.hpp"
#include "twitch-eventsub-ws/messages/metadata.hpp"

#include <boost/json.hpp>

namespace chatterino::eventsub::lib::messages {

void tag_invoke(json::FromJsonTag<Metadata> /* tag */, Metadata &target,
                boost::system::error_code &ec, const boost::json::value &jvRoot)
{
    if (!jvRoot.is_object())
    {
        EVENTSUB_INTO_BAIL_HERE(error::Kind::ExpectedObject);
    }
    const auto &root = jvRoot.get_object();

    const auto *jvmessageID = root.if_contains("message_id");
    if (jvmessageID == nullptr)
    {
        EVENTSUB_INTO_BAIL_HERE(error::Kind::FieldMissing);
    }

    if (!json::fromJson(target.messageID, ec, *jvmessageID))
    {
        return;
    }
    const auto *jvmessageType = root.if_contains("message_type");
    if (jvmessageType == nullptr)
    {
        EVENTSUB_INTO_BAIL_HERE(error::Kind::FieldMissing);
    }

    if (!json::fromJson(target.messageType, ec, *jvmessageType))
    {
        return;
    }
    const auto *jvmessageTimestamp = root.if_contains("message_timestamp");
    if (jvmessageTimestamp == nullptr)
    {
        EVENTSUB_INTO_BAIL_HERE(error::Kind::FieldMissing);
    }

    if (!json::fromJson(target.messageTimestamp, ec, *jvmessageTimestamp))
    {
        return;
    }
    const auto *jvsubscriptionType = root.if_contains("subscription_type");
    if (jvsubscriptionType != nullptr && !jvsubscriptionType->is_null())
    {
        if (!json::fromJson(target.subscriptionType.emplace(), ec,
                            *jvsubscriptionType))
        {
            return;
        }
    }

    const auto *jvsubscriptionVersion =
        root.if_contains("subscription_version");
    if (jvsubscriptionVersion != nullptr && !jvsubscriptionVersion->is_null())
    {
        if (!json::fromJson(target.subscriptionVersion.emplace(), ec,
                            *jvsubscriptionVersion))
        {
            return;
        }
    }
}

}  // namespace chatterino::eventsub::lib::messages
